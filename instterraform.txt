provider "aws" {
  region = var.region
}

resource "aws_instance" "debian_ec2" {
  ami                    = var.ami_id
  instance_type          = var.instance_type
  key_name               = var.key_name
  associate_public_ip_address = true
  vpc_security_group_ids = [aws_security_group.allow_ssh.id]

  tags = {
    Name = "Debian-Terraform-EC2"
  }
}

resource "aws_security_group" "allow_ssh" {
  name        = "allow_ssh"
  description = "Allow SSH inbound traffic"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Use your IP/CIDR for better security
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}


# output.tf

output "instance_ip" {
  value = aws_instance.debian_ec2.public_ip
  description = "The public IP address of the instance"
}

output "instance_id" {
  value = aws_instance.debian_ec2.id
  description = "The ID of the instance"
}

execute terraform.sh

AWS ACCESS_KEY GENERATE


aws configure

	key - ID
	key - secret
	Default Region - us-east-1
	output - json

mkdir terra & cd terra

create these files.....

main.tf
variables.tf
outputs.tf


Go to EC2 generate keypair copy the keypair. ..!
copy to your Debian machine. ......  
		~/.ssh/demo

chmod 400 demo

terraform init
terraform plan
terraform apply


variable "region" {
  default = "us-east-1"
}

variable "ami_id" {
  description = "Debian 12 AMI ID"
  default     = "ami-0779caf41f9ba54f0"  # Debian 12 (Bookworm) in us-east-1
}

variable "instance_type" {
  default = "t2.micro"
}

variable "key_name" {
  description = "Enter a key pair"
}
